{"version":3,"sources":["StarburstChart.js","index.js"],"names":["newData","missingData","data","map","item","newItem","JSON","parse","stringify","groupName","Group","Object","entries","key","value","Number","push","childrenMaker","newProcessedData","name","children","values","StarburstChart","svgRef","React","useRef","svgContainer","useState","viewBox","setViewBox","width","setWidth","height","setHeight","getSvgContainerSize","newWidth","current","clientWidth","newHeight","clientHeight","color","d3","length","format","arc","startAngle","d","x0","endAngle","x1","padAngle","Math","min","padRadius","RADIUS","innerRadius","y0","outerRadius","y1","getColor","depth","parent","getTextTransform","x","PI","y","root","size","SIZE","sum","sort","a","b","useEffect","getBBox","toString","getAutoBox","window","addEventListener","removeEventListener","ref","className","fillOpacity","descendants","filter","i","fill","ancestors","reverse","join","pointerEvents","textAnchor","fontSize","fontFamily","transform","dy","keys","index","rootElement","document","getElementById","render"],"mappings":"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","file":"static/js/main.209a95f1.chunk.js","sourcesContent":["import React from \"react\";\nimport * as d3 from \"d3\";\nimport data from \"./data.json\";\n\nconst newData = {};\nconst missingData = {};\n\nconst childrenMaker = (newData, groupName, newItem) => {\n  for (const [key, value] of Object.entries(newItem)) {\n    if (newData[`${groupName}`][\"children\"][`${key}`]) {\n      switch (key) {\n        case \"Patient\":\n          newData[`${groupName}`][\"children\"][`${key}`][\"value\"] =\n            Number(newData[`${groupName}`][\"children\"][`${key}`][\"value\"]) + 1;\n          break;\n        case \"Age\":\n          // To calculate Age range\n          break;\n        default:\n          newData[`${groupName}`][\"children\"][`${key}`][\"value\"] =\n            Number(newData[`${groupName}`][\"children\"][`${key}`][\"value\"]) +\n            Number(value);\n      }\n    } else {\n      if (value === 999) {\n        if (missingData[`${groupName}`]) {\n          missingData[`${groupName}`].push(newItem);\n        } else {\n          missingData[`${groupName}`] = [];\n          missingData[`${groupName}`].push(newItem);\n        }\n      } else {\n        switch (key) {\n          case \"Patient\":\n            newData[`${groupName}`][\"children\"][`${key}`] = {};\n            newData[`${groupName}`][\"children\"][`${key}`][\"name\"] =\n              \"No. of Patients\";\n            newData[`${groupName}`][\"children\"][`${key}`][\"value\"] = 1;\n            break;\n          case \"Age\":\n            // To calculate Age range\n            break;\n          default:\n            newData[`${groupName}`][\"children\"][`${key}`] = {};\n            newData[`${groupName}`][\"children\"][`${key}`][\"name\"] = key;\n            newData[`${groupName}`][\"children\"][`${key}`][\"value\"] =\n              Number(value);\n        }\n      }\n    }\n  }\n};\n\ndata.map((item) => {\n  const newItem = JSON.parse(JSON.stringify(item));\n  const groupName = item.Group;\n  delete newItem.Group;\n\n  if (!newData[`${groupName}`]) {\n    newData[`${groupName}`] = {};\n    newData[`${groupName}`][\"name\"] = item.Group;\n    newData[`${groupName}`][\"children\"] = {};\n  }\n  childrenMaker(newData, groupName, newItem);\n  return null;\n});\n\nlet newProcessedData = {\n  name: \"Saturn-1\",\n  children: Object.values(newData).map((item) => ({\n    ...item,\n    children: Object.values(item.children),\n  })),\n};\n\nconst SIZE = 975;\nconst RADIUS = SIZE / 2;\n\nexport const StarburstChart = () => {\n  const svgRef = React.useRef(null);\n  const svgContainer = React.useRef(null); // The PARENT of the SVG\n  const [viewBox, setViewBox] = React.useState(\"0,0,0,0\");\n\n  // State to track width and height of SVG Container\n  const [width, setWidth] = React.useState();\n  const [height, setHeight] = React.useState();\n\n  // This function calculates width and height of the container\n  const getSvgContainerSize = () => {\n    const newWidth = svgContainer.current.clientWidth;\n    setWidth(newWidth);\n\n    const newHeight = svgContainer.current.clientHeight;\n    setHeight(newHeight);\n  };\n\n  const partition = (data) =>\n    d3.partition().size([2 * Math.PI, RADIUS])(\n      d3\n        .hierarchy(data)\n        .sum((d) => d.value)\n        .sort((a, b) => b.value - a.value)\n    );\n\n  const color = d3.scaleOrdinal(\n    d3.quantize(d3.interpolateRainbow, newProcessedData?.children?.length + 1)\n  );\n\n  const format = d3.format(\",d\");\n\n  const arc = d3\n    .arc()\n    .startAngle((d) => d.x0)\n    .endAngle((d) => d.x1)\n    .padAngle((d) => Math.min((d.x1 - d.x0) / 2, 0.005))\n    .padRadius(RADIUS / 2)\n    .innerRadius((d) => d.y0)\n    .outerRadius((d) => d.y1 - 1);\n\n  const getAutoBox = () => {\n    if (!svgRef.current) {\n      return \"\";\n    }\n\n    const { x, y, width, height } = svgRef.current.getBBox();\n\n    return [x, y, width, height].toString();\n  };\n\n  const getColor = (d) => {\n    while (d.depth > 1) d = d.parent;\n    return color(d.data.name);\n  };\n\n  const getTextTransform = (d) => {\n    const x = (((d.x0 + d.x1) / 2) * 180) / Math.PI;\n    const y = (d.y0 + d.y1) / 2;\n    return `rotate(${x - 90}) translate(${y},0) rotate(${x < 180 ? 0 : 180})`;\n  };\n\n  const root = partition(newProcessedData);\n\n  React.useEffect(() => {\n    setViewBox(getAutoBox());\n  }, [data, width, height]);\n\n  React.useEffect(() => {\n    // detect 'width' and 'height' on render\n    getSvgContainerSize();\n    // listen for resize changes, and detect dimensions again when they change\n    window.addEventListener(\"resize\", getSvgContainerSize);\n    // cleanup event listener\n    return () => window.removeEventListener(\"resize\", getSvgContainerSize);\n  }, []);\n\n  return (\n    <div ref={svgContainer} className=\"starburst-chart\">\n      <svg width={SIZE} height={SIZE} viewBox={viewBox} ref={svgRef}>\n        <g fillOpacity={0.6}>\n          {root\n            .descendants()\n            .filter((d) => d.depth)\n            .map((d, i) => (\n              <path key={`${d.data.name}-${i}`} fill={getColor(d)} d={arc(d)}>\n                <text>\n                  {d\n                    .ancestors()\n                    .map((d) => d.data.name)\n                    .reverse()\n                    .join(\"/\")}\n                  \\n${format(d.value)}\n                </text>\n              </path>\n            ))}\n        </g>\n        <g\n          pointerEvents=\"none\"\n          textAnchor=\"middle\"\n          fontSize={10}\n          fontFamily=\"sans-serif\"\n        >\n          {root\n            .descendants()\n            .filter((d) => d.depth && ((d.y0 + d.y1) / 2) * (d.x1 - d.x0) > 10)\n            .map((d, i) => (\n              <text\n                key={`${d.data.name}-${i}`}\n                transform={getTextTransform(d)}\n                dy=\"0.35em\"\n              >\n                {d.data.name}\n              </text>\n            ))}\n        </g>\n      </svg>\n      <div>\n        <strong>Missing Data (999)</strong>\n        <ul>\n          {Object.keys(missingData).map((item, index) => {\n            return (\n              <li key={index}>\n                {item}: {missingData[`${item}`]?.length} Records\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </div>\n  );\n};\n","import { render } from \"react-dom\";\n\nimport { StarburstChart } from \"./StarburstChart\";\n\nconst rootElement = document.getElementById(\"root\");\nrender(<StarburstChart />, rootElement);\n"],"sourceRoot":""}